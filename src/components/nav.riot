<app-nav>

    <h1 class='col w-34 mobile-w-100'>
        <a scroll to='body'>Danilo Alonso</a>

        <a onclick={ toggle } class='toggle hide mobile-block float-right'>
            <i class='fa fa-bars'></i>
        </a>
    </h1>

    <nav class="col w-66 mobile-w-100 { state.open ? 'open' : '' }">
        <h2 class='hide mobile-block mobile-title'>
            Menu
            <a class='float-right toggle' onclick={ toggle }><i class='fa fa-times fa-fw'></i></a>
        </h2>
        <a scroll to="[is='about']">About</a>
        <a scroll to="[is='experience']">Experience</a>
        <a scroll to="[is='skills']">Skills</a>
        <a scroll to="[is='work']">My Work</a>
    </nav>


    <div id="overlay" onclick={ toggle }></div>

    <script>

        import { $ } from 'bianco';
        import { add } from 'bianco.events';
        import css from 'bianco.css';
        import anime from 'animejs';

        export default {
            onBeforeMount() {

                this.state.open = null;
            }
            onMounted() {

                this.actions.scrollLinks();

                console.log(this.root)

                add(
                    $('nav a[to]', this.root),
                    'click',
                    this.toggle
                );

            }

            onUpdated() {

                if (this.state.open === null) {
                    return;
                }

                if (this.state.isMobile) {

                    const targets = this.root.children.overlay;

                    if (this.state.open) {

                        targets.classList.add('open');
                        css.set(document.body, {
                            overflow: 'hidden'
                        });
                    }

                    const animation = {
                        targets,
                        opacity: this.state.open ? [0, 1] : [1, 0],
                        duration: 250,
                        easing: 'linear',
                        complete: () => {

                            if (!this.state.open) {
                                targets.classList.remove('open');
                                css.remove(document.body, 'overflow');
                            }
                        }
                    };


                    anime(animation);
                }
            }

            toggle() {
                if (this.state.isMobile) {

                    this.update({
                        open: !this.state.open
                    });
                }
            }
        }
    </script>
</app-nav>